import Head from "next/head";
import { Col, Row } from "reactstrap";
import SalesChart from "../src/components/dashboard/SalesChart";
import Feeds from "../src/components/dashboard/Feeds";
import ProjectTables from "../src/components/dashboard/ProjectTable";
import TopCards from "../src/components/dashboard/TopCards";
import IconLogo from "../src/assets/images/logos/icon_logo.png";
import Blog from "../src/components/dashboard/Blog";
import axios from "axios";
import { useEffect, useState } from "react";
import { useSession } from "next-auth/react";

export default function Home() {
  const [tableData, setTableData] = useState({});
  const [error, setError] = useState(null); // Initialize error state
  const [loading, setLoading] = useState(true); // Initialize loading state
  const { data: session, status } = useSession();

  useEffect(() => {
    const fetchData = async() => {
      console.log("HIIIII");
      if (status === "loading") {
        // Wait for the session to load
        console.log("loading");
        return;
      }

      if (!session) {
        // Handle the case where there is no session (user not authenticated)
        console.log("not authenticated");
        setError("User is not authenticated");
        setLoading(false);
        return;
      }
      try {
        const response1 = await fetch('http://127.0.0.1:8000/api/csrf_token');
        const data = await response1.json();
        console.log("CSRF Token: ", data.csrfToken);
        const response = await axios.get(
          "http://127.0.0.1:8000/api/getUserinfo",
          {
            headers: {
              'X-CSRFToken': data["csrfToken"],
              'Authorization': `Bearer ${session.user.email}`,
            }
          }
        );

        const receivedData = response.data.data;
        
        console.log("Data received: ", receivedData);
        // Process the received data and update tableData
        setTableData(receivedData);
      } catch(error) {
        console.log(error);
        setError("Failed to fetch data");
      } finally {
        setLoading(false); // Ensure loading is set to false in both success and failure cases
      }
    }

    fetchData();
  }, [session, status]); // Dependency array to ensure effect runs only when session or status changes

  function getDangerLevelClass(dangerValue) {
    if (dangerValue === "High") {
      return "bg-light-danger text-danger"; // Use appropriate CSS classes for Danger
    } else if (dangerValue === "Medium") {
      return "bg-light-warning text-warning"; // Use appropriate CSS classes for Medium
    } else if (dangerValue === "Low") {
      return "bg-light-success text-success"; // Use appropriate CSS classes for Low
    }
    return "bg-light-info text-info"; // Default case, if needed
  }

  return (
    <div>
      <Head>
        <title>Achilles</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href={IconLogo} />
      </Head>
      <div>
        {/***Top Cards***/}
        <Row>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-success text-success"
              title="Companies"
              subtitle="Companies Found"
              earning={tableData["company_num"]}
              icon="bi bi-cone-striped"
            />
          </Col>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-danger text-danger"
              title="Cookies"
              subtitle="Cookies Found"
              earning={tableData["cookie_num"]}
              icon="bi bi-cookie"
            />
          </Col>
          <Col sm="6" lg="3">
            <TopCards
              bg={getDangerLevelClass(tableData["danger"])}
              title="Danger"
              subtitle="Curent Danger Level"
              earning={tableData["danger"]}
              icon="bi bi-x-circle"
            />
          </Col>
          <Col sm="6" lg="3">
            <TopCards
              bg="bg-light-info text-into"
              title="Emails"
              subtitle="Emails Sent"
              earning={tableData["email_sent"]}
              icon="bi bi-tv"
            />
          </Col>
        </Row>
        {/***Sales & Feed***/}
        <Row>
          <Col sm="24" lg="12" xl="12" xxl="12">
            <SalesChart />
          </Col>
          {/* <Col sm="12" lg="6" xl="5" xxl="4">
            <Feeds />
          </Col> */}
        </Row>
        {/***Table ***/}
        <Row>
          <Col lg="12" sm="12">
            <ProjectTables />
          </Col>
        </Row>
      </div>
    </div>
  );
}
